{"ast":null,"code":"var _jsxFileName = \"/home/nataniel/verzel-front/projects/aluga-carros/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from '../axiosConfig';\n//import { User } from '../types';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const history = useNavigate();\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('token');\n    if (loggedInUser) {\n      //checkTokenValidity();\n      getUser();\n      localStorage.setItem('token', loggedInUser);\n    }\n\n    // Adiciona um interceptor para respostas do Axios\n    const responseInterceptor = axios.interceptors.response.use(response => response, error => {\n      if (error.response && error.response.status === 401) {\n        logout();\n      }\n      return Promise.reject(error);\n    });\n\n    // Limpa o interceptor quando o componente é desmontado\n    return () => {\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n  const login = async (email, password) => {\n    const response = await axios.post('/login', {\n      email,\n      password\n    }).then(response => {\n      var _response$data, _response$data$access;\n      if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$access = _response$data.access_token) === null || _response$data$access === void 0 ? void 0 : _response$data$access.length) > 0) {\n        var _response$data2;\n        const loggedInUser = (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.access_token;\n        setUser(loggedInUser);\n        localStorage.setItem('token', loggedInUser);\n        //checkTokenValidity(); // Verifique a validade do token após o login\n        history('/');\n      } else {\n        throw new Error('Invalid email or password');\n      }\n    }).catch(() => {\n      throw new Error('Invalid email or password');\n    });\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n    history('/');\n  };\n  const checkTokenValidity = async () => {\n    const userData = localStorage.getItem('token'); // Obtém o access_token do localStorage\n    if (!userData) {\n      logout();\n      return;\n    }\n    try {\n      const response = await axios.get('/validate-token', {\n        headers: {\n          Authorization: `Bearer ${userData}`\n        }\n      });\n      if (response.data.valid) {\n        setIsAuthenticated(true);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Token validation error:', error);\n      logout();\n    }\n  };\n  const getUser = async () => {\n    await axios.get(`/user/`).then(response => {\n      setIsAuthenticated(true);\n      setUser(response.data);\n      alert('kkk');\n    }).catch(error => {\n      alert('nnnn');\n      console.log(error);\n    });\n  };\n  const register = async (name, email, password) => {\n    //\n\n    const data = new FormData();\n    data.append(\"password\", name);\n    data.append(\"email\", email);\n    data.append(\"password\", password);\n    await axios.post(`/register`, data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json'\n      }\n    }).then(response => {\n      var _response$data3, _response$data3$acces;\n      if (((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$acces = _response$data3.access_token) === null || _response$data3$acces === void 0 ? void 0 : _response$data3$acces.length) > 0) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n        setIsAuthenticated(true);\n        checkTokenValidity(); // Verifique a validade do token após o login\n        login(email, password);\n      } else {\n        throw new Error('Invalid email or password');\n      }\n    }).catch(() => {\n      throw new Error('Invalid email or password');\n    });\n\n    //await axios.post('http://localhost:5000/users/register', userData)\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      register,\n      checkTokenValidity,\n      getUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GFL45jOCg9wSqgolKBYzU3F2gRY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","history","loggedInUser","localStorage","getItem","getUser","setItem","responseInterceptor","interceptors","response","use","error","status","logout","Promise","reject","eject","login","email","password","post","then","_response$data","_response$data$access","data","access_token","length","_response$data2","Error","catch","removeItem","checkTokenValidity","userData","get","headers","Authorization","valid","console","alert","log","register","name","FormData","append","_response$data3","_response$data3$acces","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nataniel/verzel-front/projects/aluga-carros/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from '../axiosConfig';\r\n//import { User } from '../types';\r\nimport { useNavigate } from 'react-router-dom'; \r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextProps {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n  checkTokenValidity: () => Promise<void>;\r\n  getUser: () => Promise<void>,\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem('token');\r\n    if (loggedInUser) {\r\n      //checkTokenValidity();\r\n      getUser();\r\n      localStorage.setItem('token', loggedInUser);\r\n    }\r\n\r\n    // Adiciona um interceptor para respostas do Axios\r\n    const responseInterceptor = axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        if (error.response && error.response.status === 401) {\r\n          logout();\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Limpa o interceptor quando o componente é desmontado\r\n    return () => {\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n\r\n  }, []);\r\n\r\n  const login = async (email: string, password?: string) => {\r\n    const response = await axios.post('/login', { email, password })\r\n    .then(response => {\r\n      if (response.data?.access_token?.length > 0) {\r\n        const loggedInUser = response.data?.access_token;\r\n        setUser(loggedInUser);\r\n        localStorage.setItem('token', loggedInUser);    \r\n        //checkTokenValidity(); // Verifique a validade do token após o login\r\n        history('/');\r\n      } else {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n    }).catch(() => {throw new Error('Invalid email or password')});\r\n    \r\n  };\r\n  \r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('token');\r\n    history('/');\r\n  };\r\n\r\n  const checkTokenValidity = async () => {\r\n    const userData = localStorage.getItem('token'); // Obtém o access_token do localStorage\r\n    if (!userData) {\r\n      logout();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get('/validate-token', {\r\n        headers: { Authorization: `Bearer ${userData}` },\r\n      });\r\n\r\n      if (response.data.valid) {\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Token validation error:', error);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const getUser = async () =>{\r\n    await axios.get(`/user/`).then(response => {\r\n      setIsAuthenticated(true);\r\n      setUser(response.data);\r\n      alert('kkk');\r\n    }).catch(error => {\r\n      alert('nnnn');\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const register = async (name: string, email: string, password: string) => { //\r\n\r\n    const data = new FormData();\r\n    data.append(\"password\", name);\r\n    data.append(\"email\", email);\r\n    data.append(\"password\", password);\r\n\r\n    await axios.post(`/register`, data, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Accept': 'application/json',\r\n      }\r\n    }).then((response)=>{\r\n      if (response.data?.access_token?.length > 0) {\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n        setIsAuthenticated(true);\r\n        checkTokenValidity(); // Verifique a validade do token após o login\r\n        login(email, password);\r\n      } else {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n    }).catch(()=>{ throw new Error('Invalid email or password') });\r\n\r\n    //await axios.post('http://localhost:5000/users/register', userData)\r\n    \r\n\r\n    \r\n     \r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout, register, checkTokenValidity, getUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}