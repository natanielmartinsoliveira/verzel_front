{"ast":null,"code":"var _jsxFileName = \"/home/nataniel/verzel-front/projects/aluga-carros/src/Components/MarcaForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarcaForm = ({\n  match,\n  history\n}) => {\n  _s();\n  const [nome, setNome] = useState('');\n  useEffect(() => {\n    if (match.params.id) {\n      fetchMarca(match.params.id);\n    }\n  }, [match.params.id]);\n  const fetchMarca = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/marcas/${id}`);\n      setNome(response.data.nome);\n    } catch (error) {\n      console.error('Error fetching marca', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const marca = {\n      id: match.params.id ? parseInt(match.params.id) : 0,\n      nome\n    };\n    try {\n      if (match.params.id) {\n        await axios.put(`http://localhost:8000/api/marcas/${marca.id}`, marca);\n      } else {\n        await axios.post('http://localhost:8000/api/marcas', marca);\n      }\n      history.push('/marcas');\n    } catch (error) {\n      console.error('Error saving marca', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: match.params.id ? 'Editar Marca' : 'Adicionar Marca'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nome\",\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"nome\",\n          value: nome,\n          onChange: e => setNome(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(MarcaForm, \"Oct+q7/+BCOk4AfekElpb9atNV0=\");\n_c = MarcaForm;\nexport default MarcaForm;\nvar _c;\n$RefreshReg$(_c, \"MarcaForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MarcaForm","match","history","_s","nome","setNome","params","id","fetchMarca","response","get","data","error","console","handleSubmit","e","preventDefault","marca","parseInt","put","post","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/nataniel/verzel-front/projects/aluga-carros/src/Components/MarcaForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Marca } from '../types';\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<MatchParams> {}\r\n\r\nconst MarcaForm: React.FC<Props> = ({ match, history }) => {\r\n    const [nome, setNome] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        if (match.params.id) {\r\n            fetchMarca(match.params.id);\r\n        }\r\n    }, [match.params.id]);\r\n\r\n    const fetchMarca = async (id: string) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8000/api/marcas/${id}`);\r\n            setNome(response.data.nome);\r\n        } catch (error) {\r\n            console.error('Error fetching marca', error);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const marca: Marca = { id: match.params.id ? parseInt(match.params.id) : 0, nome };\r\n\r\n        try {\r\n            if (match.params.id) {\r\n                await axios.put(`http://localhost:8000/api/marcas/${marca.id}`, marca);\r\n            } else {\r\n                await axios.post('http://localhost:8000/api/marcas', marca);\r\n            }\r\n            history.push('/marcas');\r\n        } catch (error) {\r\n            console.error('Error saving marca', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>{match.params.id ? 'Editar Marca' : 'Adicionar Marca'}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"nome\">Nome</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"nome\"\r\n                        value={nome}\r\n                        onChange={(e) => setNome(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Salvar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarcaForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}