{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  }\n});\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","process","env","REACT_APP_API_URL","headers","Accept","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["/home/nataniel/verzel-front/projects/aluga-carros/src/axiosConfig.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n    },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC;AAEFP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAehB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}